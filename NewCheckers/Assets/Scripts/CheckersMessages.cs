// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CheckersMessages.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Checkers.Messages {

  /// <summary>Holder for reflection information generated from CheckersMessages.proto</summary>
  public static partial class CheckersMessagesReflection {

    #region Descriptor
    /// <summary>File descriptor for CheckersMessages.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CheckersMessagesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChZDaGVja2Vyc01lc3NhZ2VzLnByb3RvEg5raXJrX3Byb2plY3RfMiL9AQoP",
            "Q2hlY2tlcnNNZXNzYWdlEhgKEHByb3RvY29sX3ZlcnNpb24YASABKAUSMQoM",
            "bWVzc2FnZV90eXBlGAIgASgOMhsua2lya19wcm9qZWN0XzIuTWVzc2FnZVR5",
            "cGUSIgoEc2lkZRgDIAEoDjIULmtpcmtfcHJvamVjdF8yLlNpZGUSEQoJc3Rh",
            "cnRfcm93GAQgASgFEhEKCXN0YXJ0X2NvbBgFIAEoBRIPCgdlbmRfcm93GAYg",
            "ASgFEg8KB2VuZF9jb2wYByABKAUSMQoMZ2FtZV9vdXRjb21lGAggASgOMhsu",
            "a2lya19wcm9qZWN0XzIuR2FtZU91dGNvbWUqrQEKC01lc3NhZ2VUeXBlEhgK",
            "FE1FU1NBR0VfVFlQRV9VTktOT1dOEAASEwoPUFJFU0VOVF9PUFRJT05TEAES",
            "CAoESk9JThACEgoKBlJFU0lHThADEggKBE1PVkUQBBIICgRUVVJOEAUSCwoH",
            "Q0FQVFVSRRAGEhAKDEdBTUVfT1VUQ09NRRAHEhAKDElOVkFMSURfTU9WRRAI",
            "EhQKEFBMQVlFUl9DT05ORUNURUQQCSo2CgRTaWRlEhAKDFNJREVfVU5LTk9X",
            "ThAAEgcKA1JFRBABEgkKBVdISVRFEAISCAoEQk9USBADKm8KC0dhbWVPdXRj",
            "b21lEhgKFEdBTUVfT1VUQ09NRV9VTktOT1dOEAASDgoKUkVEX1JFU0lHThAB",
            "EhAKDFdISVRFX1JFU0lHThACEgsKB1JFRF9XSU4QAxINCglXSElURV9XSU4Q",
            "BBIICgREUkFXEAVCFKoCEUNoZWNrZXJzLk1lc3NhZ2VzYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Checkers.Messages.MessageType), typeof(global::Checkers.Messages.Side), typeof(global::Checkers.Messages.GameOutcome), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Checkers.Messages.CheckersMessage), global::Checkers.Messages.CheckersMessage.Parser, new[]{ "ProtocolVersion", "MessageType", "Side", "StartRow", "StartCol", "EndRow", "EndCol", "GameOutcome" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum MessageType {
    [pbr::OriginalName("MESSAGE_TYPE_UNKNOWN")] Unknown = 0,
    [pbr::OriginalName("PRESENT_OPTIONS")] PresentOptions = 1,
    [pbr::OriginalName("JOIN")] Join = 2,
    [pbr::OriginalName("RESIGN")] Resign = 3,
    [pbr::OriginalName("MOVE")] Move = 4,
    [pbr::OriginalName("TURN")] Turn = 5,
    [pbr::OriginalName("CAPTURE")] Capture = 6,
    [pbr::OriginalName("GAME_OUTCOME")] GameOutcome = 7,
    [pbr::OriginalName("INVALID_MOVE")] InvalidMove = 8,
    [pbr::OriginalName("PLAYER_CONNECTED")] PlayerConnected = 9,
  }

  public enum Side {
    [pbr::OriginalName("SIDE_UNKNOWN")] Unknown = 0,
    [pbr::OriginalName("RED")] Red = 1,
    [pbr::OriginalName("WHITE")] White = 2,
    [pbr::OriginalName("BOTH")] Both = 3,
  }

  public enum GameOutcome {
    [pbr::OriginalName("GAME_OUTCOME_UNKNOWN")] Unknown = 0,
    [pbr::OriginalName("RED_RESIGN")] RedResign = 1,
    [pbr::OriginalName("WHITE_RESIGN")] WhiteResign = 2,
    [pbr::OriginalName("RED_WIN")] RedWin = 3,
    [pbr::OriginalName("WHITE_WIN")] WhiteWin = 4,
    [pbr::OriginalName("DRAW")] Draw = 5,
  }

  #endregion

  #region Messages
  public sealed partial class CheckersMessage : pb::IMessage<CheckersMessage> {
    private static readonly pb::MessageParser<CheckersMessage> _parser = new pb::MessageParser<CheckersMessage>(() => new CheckersMessage());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CheckersMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Checkers.Messages.CheckersMessagesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckersMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckersMessage(CheckersMessage other) : this() {
      protocolVersion_ = other.protocolVersion_;
      messageType_ = other.messageType_;
      side_ = other.side_;
      startRow_ = other.startRow_;
      startCol_ = other.startCol_;
      endRow_ = other.endRow_;
      endCol_ = other.endCol_;
      gameOutcome_ = other.gameOutcome_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckersMessage Clone() {
      return new CheckersMessage(this);
    }

    /// <summary>Field number for the "protocol_version" field.</summary>
    public const int ProtocolVersionFieldNumber = 1;
    private int protocolVersion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ProtocolVersion {
      get { return protocolVersion_; }
      set {
        protocolVersion_ = value;
      }
    }

    /// <summary>Field number for the "message_type" field.</summary>
    public const int MessageTypeFieldNumber = 2;
    private global::Checkers.Messages.MessageType messageType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Checkers.Messages.MessageType MessageType {
      get { return messageType_; }
      set {
        messageType_ = value;
      }
    }

    /// <summary>Field number for the "side" field.</summary>
    public const int SideFieldNumber = 3;
    private global::Checkers.Messages.Side side_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Checkers.Messages.Side Side {
      get { return side_; }
      set {
        side_ = value;
      }
    }

    /// <summary>Field number for the "start_row" field.</summary>
    public const int StartRowFieldNumber = 4;
    private int startRow_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int StartRow {
      get { return startRow_; }
      set {
        startRow_ = value;
      }
    }

    /// <summary>Field number for the "start_col" field.</summary>
    public const int StartColFieldNumber = 5;
    private int startCol_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int StartCol {
      get { return startCol_; }
      set {
        startCol_ = value;
      }
    }

    /// <summary>Field number for the "end_row" field.</summary>
    public const int EndRowFieldNumber = 6;
    private int endRow_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EndRow {
      get { return endRow_; }
      set {
        endRow_ = value;
      }
    }

    /// <summary>Field number for the "end_col" field.</summary>
    public const int EndColFieldNumber = 7;
    private int endCol_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EndCol {
      get { return endCol_; }
      set {
        endCol_ = value;
      }
    }

    /// <summary>Field number for the "game_outcome" field.</summary>
    public const int GameOutcomeFieldNumber = 8;
    private global::Checkers.Messages.GameOutcome gameOutcome_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Checkers.Messages.GameOutcome GameOutcome {
      get { return gameOutcome_; }
      set {
        gameOutcome_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CheckersMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CheckersMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProtocolVersion != other.ProtocolVersion) return false;
      if (MessageType != other.MessageType) return false;
      if (Side != other.Side) return false;
      if (StartRow != other.StartRow) return false;
      if (StartCol != other.StartCol) return false;
      if (EndRow != other.EndRow) return false;
      if (EndCol != other.EndCol) return false;
      if (GameOutcome != other.GameOutcome) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProtocolVersion != 0) hash ^= ProtocolVersion.GetHashCode();
      if (MessageType != 0) hash ^= MessageType.GetHashCode();
      if (Side != 0) hash ^= Side.GetHashCode();
      if (StartRow != 0) hash ^= StartRow.GetHashCode();
      if (StartCol != 0) hash ^= StartCol.GetHashCode();
      if (EndRow != 0) hash ^= EndRow.GetHashCode();
      if (EndCol != 0) hash ^= EndCol.GetHashCode();
      if (GameOutcome != 0) hash ^= GameOutcome.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProtocolVersion != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ProtocolVersion);
      }
      if (MessageType != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) MessageType);
      }
      if (Side != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Side);
      }
      if (StartRow != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(StartRow);
      }
      if (StartCol != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(StartCol);
      }
      if (EndRow != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(EndRow);
      }
      if (EndCol != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(EndCol);
      }
      if (GameOutcome != 0) {
        output.WriteRawTag(64);
        output.WriteEnum((int) GameOutcome);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProtocolVersion != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ProtocolVersion);
      }
      if (MessageType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MessageType);
      }
      if (Side != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Side);
      }
      if (StartRow != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StartRow);
      }
      if (StartCol != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StartCol);
      }
      if (EndRow != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EndRow);
      }
      if (EndCol != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EndCol);
      }
      if (GameOutcome != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) GameOutcome);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CheckersMessage other) {
      if (other == null) {
        return;
      }
      if (other.ProtocolVersion != 0) {
        ProtocolVersion = other.ProtocolVersion;
      }
      if (other.MessageType != 0) {
        MessageType = other.MessageType;
      }
      if (other.Side != 0) {
        Side = other.Side;
      }
      if (other.StartRow != 0) {
        StartRow = other.StartRow;
      }
      if (other.StartCol != 0) {
        StartCol = other.StartCol;
      }
      if (other.EndRow != 0) {
        EndRow = other.EndRow;
      }
      if (other.EndCol != 0) {
        EndCol = other.EndCol;
      }
      if (other.GameOutcome != 0) {
        GameOutcome = other.GameOutcome;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            ProtocolVersion = input.ReadInt32();
            break;
          }
          case 16: {
            messageType_ = (global::Checkers.Messages.MessageType) input.ReadEnum();
            break;
          }
          case 24: {
            side_ = (global::Checkers.Messages.Side) input.ReadEnum();
            break;
          }
          case 32: {
            StartRow = input.ReadInt32();
            break;
          }
          case 40: {
            StartCol = input.ReadInt32();
            break;
          }
          case 48: {
            EndRow = input.ReadInt32();
            break;
          }
          case 56: {
            EndCol = input.ReadInt32();
            break;
          }
          case 64: {
            gameOutcome_ = (global::Checkers.Messages.GameOutcome) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
